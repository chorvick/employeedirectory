{"version":3,"sources":["components/Header/index.js","components/SearchBar/index.js","components/EmployeeTable/index.js","utils/APIcalls.js","components/Container/EmployeeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","EmployeeTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","axios","get","EmployeeContainer","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd7c4388.chunk.js","sourcesContent":["import React from \"react\";\n\n//xxxx\n\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"text-center\">Employee Directory</h1>\n            <p className=\"text-center\">\n                Click on Email, phone number or dob to filter the list in order\n      </p>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\n\nconst SearchBar = (props) => {\n    // Setting initial state\n\n    return (\n        <nav className=\"navbar navbar-light bg-light justify-content-center\">\n\n            <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n\n                <input\n                    className=\"form-control\"\n                    value={props.value}\n                    name=\"search\"\n                    onChange={props.handleInputChange}\n                    type=\"search\"\n                    placeholder=\"Search\"\n                />\n            </form>\n        </nav>\n    );\n};\n\n\n\nexport default SearchBar;","import React from \"react\";\n\n\nconst EmployeeTable = (props) => {\n\n\n    return (\n        <table className=\"table table-striped table-sortable text-center\">\n            <thead>\n                <tr>\n\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n                        <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n                            Name\n            </span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"email\")}>Email</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n                    </th>\n                </tr>\n\n            </thead>\n\n            <tbody>\n\n                {props.state.filteredEmployees.map((employee) => {\n                    const { first, last } = employee.name;\n                    const fullName = `${first} ${last}`;\n\n\n                    const dob = props.formatDate(employee.dob.date);\n\n                    return (\n                        <tr key={employee.login.uuid}>\n                            <td>\n                                <img src={employee.picture.thumbnail} alt={fullName} />\n                            </td>\n\n                            <td className=\"align-middle\">{fullName}</td>\n\n                            <td className=\"align-middle\">\n\n                                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n\n                            <td className=\"align-middle email\">\n\n                                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n\n                            </td>\n\n                            <td className=\"align-middle\">{dob}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n\nexport default EmployeeTable;","import axios from \"axios\";\n\n\nexport default {\n    getEmployees: function () {\n        return axios.get(\"https://randomuser.me/api/?results=25&nat=us&seed=abc\");\n\n    }\n\n}","import React, { Component } from \"react\";\nimport SearchBar from \"../SearchBar\";\nimport EmployeeTable from \"../EmployeeTable\";\nimport API from \"../../utils/APIcalls\";\n\nclass EmployeeContainer extends Component {\n\n\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmployees: [],\n        sortDirections: this.initialSortDirections,\n    };\n\n\n\n    get initialSortDirections() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    }\n\n    // load random people from api\n    componentDidMount() {\n        API.getEmployees()\n\n\n            .then((res) =>\n                this.setState({\n                    employees: res.data.results,\n                    filteredEmployees: res.data.results,\n                })\n            )\n            .catch((err) => console.log(err));\n    }\n\n    /// set up ability to filter by employee name not working properly\n    handleInputChange = (event) => {\n        const value = event.target.value;\n\n        this.setState({ search: value });\n\n        this.filterEmployees(value.toLowerCase().trim());\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    };\n\n\n    sortBy = (key, primary = 0, secondary = 0) => {\n        let sortedEmployees = this.state.filteredEmployees;\n\n        if (this.state.sortDirections[key]) {\n            this.setState({\n                filteredEmployees: sortedEmployees.reverse(),\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n                },\n            });\n\n        } else {\n            sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n                a = a[key];\n                b = b[key];\n\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                    }\n                    return a[primary.localeCompare(b[primary])];\n                } else {\n\n                    return a.localeCompare(b);\n                }\n            })\n            this.setState({\n                filteredEmployees: sortedEmployees,\n\n                sortDirections: {\n                    ...this.initialSortDirections,\n\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    filterEmployees = (input) => {\n        if (input) {\n            this.setState({\n                filteredEmployees: this.state.employees.filter((employee) => {\n\n                    return (\n\n                        employee.name.first\n                            .toLowerCase()\n                            .concat(\" \", employee.name.last.toLowerCase())\n                            .includes(input) || employee.phone.includes(input) || employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) || employee.email.includes(input) || this.formatDate(employee.dob.date).includes(input)\n\n                    );\n\n                }),\n\n            });\n\n        } else {\n\n            this.setState({ filteredEmployees: this.state.employees });\n        }\n    };\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n\n        dob.push((\"0\" + date.getDate()).slice(-2));\n\n        dob.push(date.getFullYear());\n\n\n        return dob.join(\"-\");\n    };\n\n    render() {\n        return (\n            <>\n\n                <SearchBar\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n\n                <div className=\"container mt-4\">\n                    <EmployeeTable\n                        state={this.state}\n                        sortBy={this.sortBy}\n                        filterEmployees={this.filterEmployees}\n                        formatDate={this.formatDate}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default EmployeeContainer;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport EmployeesContainer from \"./components/Container/EmployeeContainer\";\n// import './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <EmployeesContainer />\n    </>\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}